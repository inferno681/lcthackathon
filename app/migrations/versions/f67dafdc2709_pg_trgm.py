"""pg_trgm

Revision ID: f67dafdc2709
Revises: e7fc81975d1d
Create Date: 2024-06-12 16:44:03.865278

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f67dafdc2709"
down_revision: Union[str, None] = "e7fc81975d1d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute(
        """
        CREATE SEQUENCE IF NOT EXISTS public.yappi_tag_id_seq;
    """
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "yappi_tag",
        sa.Column(
            "id",
            sa.BigInteger(),
            server_default=sa.text("nextval('public.yappi_tag_id_seq')"),
            nullable=False,
        ),
    )
    op.drop_constraint(
        "yappi_tag_yappi_id_fkey", "yappi_tag", type_="foreignkey"
    )
    op.drop_constraint(
        "yappi_tag_tag_id_fkey", "yappi_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "yappi_tag",
        "yappi",
        ["yappi_id"],
        ["id"],
        source_schema="public",
        referent_schema="public",
    )
    op.create_foreign_key(
        None,
        "yappi_tag",
        "tag",
        ["tag_id"],
        ["id"],
        source_schema="public",
        referent_schema="public",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "yappi_tag", schema="public", type_="foreignkey")
    op.drop_constraint(None, "yappi_tag", schema="public", type_="foreignkey")
    op.create_foreign_key(
        "yappi_tag_tag_id_fkey", "yappi_tag", "tag", ["tag_id"], ["id"]
    )
    op.create_foreign_key(
        "yappi_tag_yappi_id_fkey", "yappi_tag", "yappi", ["yappi_id"], ["id"]
    )
    op.drop_column("yappi_tag", "id")
    # ### end Alembic commands ###
